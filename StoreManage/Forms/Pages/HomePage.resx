<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtSearch.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAVUAAAAsCAYAAADVViuTAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEzkAABM5AY/CVgEAAANPSURBVHhe7d2/axNhHMfxGzt27Ojo6NjRsZO4CI6O4l/g
        6OAguDk4uDn7DzjZ3o/kmlD6g0ItQq6EEk5MyhlLjPEo5/NJv6KxTb3EQ7F9v+AZQtrL9uabu9xzHgDg
        H1pdXV1261GtVovd2grDsLu2tlawWCzW/77UM3VNS51za8XSVy134EX3IS+CIOg3m83s4OCgODo6KrIs
        K4bDYQEAl4F6pq5pqXObm5uZ7/t5FEWvXAevWRL/jCv3E3fArN1u56PRyD4aAK6Gk5OTIk3Tol6vZxou
        XVwXLI+zsem00Wq1hnme2+EB4GpSXDVcui6+c31cslSWozE3juO3vV6P0RQAfnJ8fKypNXWdvGHJvJgm
        VAVV/wgAOEunQl0nP2gAtXROp6/8TKgAcLHBYKCJNdEgavk8ywX1WZIkXM4HgBLSNP3qwvraEjrJ1XYp
        iqK+TsYCAMpZX1//eO75Vf1UQFe27O8AACV0u93C9fONpfSUq+xCEASf+OkUAMwuDMOBvu1bUsdRXdGd
        A/Y+AGAG+/v7iup9S+r4rqnnh4eH9jYAYBZnTgG4F7Hu5QcAzE4/r3LDaceS6nlRFCX82B8A5qPrUb7v
        f7akep5ecJEKAOanrQMtqZ6nFwCA+RFVAKgQUQWAChFVAKgQUQWAChFVAKgQUQWAChFVAKgQUQWAChFV
        AKjQRFR938/Z8R8A5jcRVe2uol1WAACz01Cq4dSSOt76byvL2KMaAOYxHA619V/Xkjre+u9lp9OxtwEA
        s9B+1NqX2pI6fpzKvb29PTZUBYA5JEmSu6//jy2p46guBkHwxd4HAMzg3MdU6/kqes4KAKA8PTVFT0+x
        lP6gyqq29ncAgBJ2dnY0pd62lE5iWgWA8qZOqd+52i7FcdzWzwMAANPpuX6NRuO96+Z1S+j57DRAjzus
        AGC67e3tozAM71g6L+bG2VsK62g0sn8HAIgmVAW1Vqs9sGSWo4m1Xq+n3GkFAKd0DlVf+UtPqL/SOVbd
        wrqxsZHpYABwFek60+7ubl8XpX57DrUMd5CbOpibXPutVivX9Mo5VwCXmTrXbreLZrOZ6b5+18G7lsTq
        qNBuPdT0qh1ZtNUVi8ViXcalzgVB8NQ1b9kSCAD4uzzvGzvFl9vqGjGzAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="txtSearch.IconRight" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAATZJREFUSEvd
        VdsNwjAQ6wiMwAiMwEawQdkANoAN4Ket1J+OUDaADcgGYFc+1CJCEl5CWDpF9/C5SdNr9hOo63pSFMWs
        qqqcK32lXgcaLmCnsizPt8Y4RVWaDpDHaNT2mh5hK4pylW+5lvWixqFpmhGIBzZA0z0aTJUagHHmJXQg
        T6kwQN6ZQIjIfE9oq/Bj8OlEcLFPpp078ny7HgCFG4msFIoC66N5tvXUK8p6ibQK+aHCs9wkRHO/IvKG
        4zoq5AeKXn3xG4X8sCuMHZ1SrjDryYs+AfsYYW1ISN9IN37IUzgMEW02cS55x4oJ0OCvlYoDCOPeuKBx
        li0Rz7nKt9zVkoUICHHqdiPjjjnl7bJ09pQQoSs6V9M5Gg2OELH3CIXw90IOQml/zVhIyKWOp2R8bAd+
        ZNkFAB3hf8Fw5BYAAAAASUVORK5CYII=
</value>
  </data>
</root>