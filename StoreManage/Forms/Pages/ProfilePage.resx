<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>